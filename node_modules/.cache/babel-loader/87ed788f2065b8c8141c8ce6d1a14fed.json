{"ast":null,"code":"import _classCallCheck from \"D:\\\\WebWork\\\\Projects\\\\Sormovo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\WebWork\\\\Projects\\\\Sormovo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\WebWork\\\\Projects\\\\Sormovo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\WebWork\\\\Projects\\\\Sormovo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\WebWork\\\\Projects\\\\Sormovo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\WebWork\\\\Projects\\\\Sormovo\\\\src\\\\containers\\\\NavBar\\\\NavBar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './NavBar.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faCompass, faFeather, faBuilding, faTrophy, faUser, faGavel, faChurch, faGraduationCap, faCameraRetro, faPen } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport * as actions from \"../../actions/Actions\";\nimport createHistory from 'history/createBrowserHistory';\nlibrary.add(faHome, faCompass, faFeather, faBuilding, faTrophy, faUser, faGavel, faChurch, faGraduationCap, faCameraRetro, faPen);\n\nvar NavBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NavBar, _Component);\n\n  function NavBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NavBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NavBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.NavClick = function () {// this.locateNav();\n    };\n\n    _this.locateNav = function () {\n      var NavToStore = _this.props.store.status.nav;\n      var route = '/' + createHistory().location.pathname.split('/')[1];\n\n      var navOn = _this.props.navPoints.find(function (p) {\n        return p.route === route;\n      });\n\n      if (NavToStore.navPath !== route && typeof navOn !== 'undefined') {\n        _this.props.store.status.is404 = false;\n        NavToStore.navPath = route;\n        NavToStore.navSelected.id = navOn.id;\n        NavToStore.navSelected.forNavBar = navOn.forNavBar;\n        NavToStore.navSelected.name = navOn.name;\n        NavToStore.navSelected.route = navOn.route;\n\n        _this.props.toStore(NavToStore);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(NavBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.locateNav();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.locateNav();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // if (this.props.store.status.nav.navPath !== createHistory().location.pathname) this.locateNav();\n      // this.locateNav();\n      var navMenu = this.props.navPoints.filter(function (elem) {\n        return elem.forNavBar;\n      });\n      var navList = navMenu.map(function (elem) {\n        var navClass = _this2.props.store.status.nav.navPath === elem.route ? 'navActive navLink' : 'navLink';\n        return React.createElement(\"li\", {\n          key: elem.id,\n          id: elem.id,\n          onClick: _this2.NavClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: elem.route,\n          className: navClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: elem.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, elem.name)));\n      });\n      return React.createElement(\"nav\", {\n        className: \"NavBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, navList, React.createElement(Link, {\n        to: \"/404\",\n        className: \"navLink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"error 404\"))));\n    }\n  }]);\n\n  return NavBar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    store: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toStore: function toStore(navInfo) {\n      dispatch(actions.toggleNav(navInfo));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","map":{"version":3,"sources":["D:\\WebWork\\Projects\\Sormovo\\src\\containers\\NavBar\\NavBar.js"],"names":["React","Component","connect","library","FontAwesomeIcon","faHome","faCompass","faFeather","faBuilding","faTrophy","faUser","faGavel","faChurch","faGraduationCap","faCameraRetro","faPen","Link","actions","createHistory","add","NavBar","NavClick","locateNav","NavToStore","props","store","status","nav","route","location","pathname","split","navOn","navPoints","find","p","navPath","is404","navSelected","id","forNavBar","name","toStore","navMenu","filter","elem","navList","map","navClass","icon","mapStateToProps","state","mapDispatchToProps","dispatch","navInfo","toggleNav"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './NavBar.css';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faCompass, faFeather, faBuilding, faTrophy, faUser, faGavel, faChurch, faGraduationCap, faCameraRetro, faPen } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport * as actions from \"../../actions/Actions\";\r\nimport createHistory from 'history/createBrowserHistory';\r\nlibrary.add( faHome, faCompass, faFeather, faBuilding, faTrophy, faUser, faGavel, faChurch, faGraduationCap, faCameraRetro, faPen );\r\n\r\n\r\n\r\nclass NavBar extends Component {\r\n\tcomponentDidMount () {\r\n\t\tthis.locateNav();\r\n\t}\r\n\tcomponentDidUpdate () {\r\n\t\tthis.locateNav();\r\n\t}\r\n\tNavClick = () => {\r\n\t\t// this.locateNav();\r\n\t};\r\n\tlocateNav = () => {\r\n\t\tlet NavToStore = this.props.store.status.nav;\r\n\t\tlet route = '/' + createHistory().location.pathname.split('/')[1];\r\n\t\tlet navOn = this.props.navPoints.find(p => p.route === route);\r\n\t\tif ((NavToStore.navPath !== route) && (typeof navOn !== 'undefined')) {\r\n\t\t\tthis.props.store.status.is404 = false;\r\n\t\t\tNavToStore.navPath = route;\r\n\t\t\tNavToStore.navSelected.id = navOn.id;\r\n\t\t\tNavToStore.navSelected.forNavBar = navOn.forNavBar;\r\n\t\t\tNavToStore.navSelected.name = navOn.name;\r\n\t\t\tNavToStore.navSelected.route = navOn.route;\r\n\t\t\tthis.props.toStore(NavToStore);\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\t// if (this.props.store.status.nav.navPath !== createHistory().location.pathname) this.locateNav();\r\n\t\t// this.locateNav();\r\n\t\tlet navMenu = this.props.navPoints.filter(elem => elem.forNavBar);\r\n\t\tconst navList = navMenu.map((elem) => {\r\n\t\t\tlet navClass = (this.props.store.status.nav.navPath === elem.route) ? 'navActive navLink' : 'navLink';\r\n\t\t\treturn <li\r\n\t\t\t\tkey={elem.id}\r\n\t\t\t\tid={elem.id}\r\n\t\t\t\tonClick={this.NavClick}\r\n\t\t\t>\r\n\t\t\t\t<Link to={elem.route} className={navClass}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={elem.icon}/>\r\n\t\t\t\t\t<span>{elem.name}</span>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<nav className='NavBlock'>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{navList}\r\n\t\t\t\t\t<Link to='/404' className='navLink'>\r\n\t\t\t\t\t\t<span>error 404</span>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tstore: state\r\n\t}\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\ttoStore: (navInfo) => {\r\n\t\t\tdispatch(actions.toggleNav(navInfo))\r\n\t\t}\r\n\t}\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n"]},"metadata":{},"sourceType":"module"}