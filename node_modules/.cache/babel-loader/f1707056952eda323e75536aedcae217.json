{"ast":null,"code":"import _classCallCheck from \"D:\\\\WebWork\\\\Projects\\\\Sormovo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\WebWork\\\\Projects\\\\Sormovo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\WebWork\\\\Projects\\\\Sormovo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\WebWork\\\\Projects\\\\Sormovo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\WebWork\\\\Projects\\\\Sormovo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\WebWork\\\\Projects\\\\Sormovo\\\\src\\\\components\\\\Pages\\\\Buildings\\\\BuildingsStreet.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport jsonp from \"jsonp\";\nimport { streets } from './Listing';\nimport './Buildings.css';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\n\nvar BuildingsStreet =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BuildingsStreet, _Component);\n\n  function BuildingsStreet() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BuildingsStreet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BuildingsStreet)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jsonResult: [],\n      street: '',\n      jsonFull: false,\n      position: [],\n      maps: []\n    };\n\n    _this.getBuildings = function (url) {\n      jsonp(url, null, function (err, data) {\n        if (err) {\n          console.error(err.message);\n        } else {\n          if (data.result.length >= 1) {\n            _this.setState({\n              jsonResult: data.result,\n              street: data.result[0].parents[2],\n              jsonFull: true\n            });\n          } else {\n            _this.setState({\n              jsonFull: false\n            });\n          }\n        }\n      });\n    };\n\n    _this.getCord = function (url, name, nameReverse) {\n      jsonp(url, null, function (err, data) {\n        if (err) {\n          console.error(err.message);\n        } else {\n          var search, serchFiltStreet, serchFiltCity, serchFiltName, serchFilt;\n          search = data.response.GeoObjectCollection.featureMember;\n          serchFiltStreet = search.filter(function (el) {\n            return el.GeoObject.metaDataProperty.GeocoderMetaData.kind === 'street';\n          });\n          serchFiltCity = serchFiltStreet.filter(function (el) {\n            return el.GeoObject.metaDataProperty.GeocoderMetaData.Address.Components[4].name === 'Нижний Новгород';\n          });\n\n          if (serchFiltCity.length >= 2) {\n            serchFiltName = serchFiltCity.filter(function (el) {\n              return el.GeoObject.name === name || el.GeoObject.name === nameReverse;\n            });\n          } else serchFiltName = serchFiltCity;\n\n          serchFilt = serchFiltName;\n\n          if (serchFilt.length >= 1 && serchFilt !== _this.state.maps) {\n            _this.setState({\n              maps: serchFilt\n            });\n          }\n        }\n      });\n    };\n\n    _this.replace = function (arr) {\n      var cent = arr[0].GeoObject.Point.pos.split(' ');\n      var pos = [+cent[1], +cent[0]];\n      return pos;\n    };\n\n    _this.remark = function (arr) {\n      var cent = arr.split(' ');\n      var pos = [+cent[1], +cent[0]];\n      return pos;\n    };\n\n    return _this;\n  }\n\n  _createClass(BuildingsStreet, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var streetId = this.props.match.url.split('/')[2];\n      var url = 'https://kladr-api.ru/api.php' + '&streetId=' + streetId + '&contentType=building' + '&limit=100' + '&withParent=1';\n      this.getBuildings(url);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var Title, Houses;\n      var StreetChosen = streets.find(function (el) {\n        return el.id === _this2.props.match.url.split('/')[2];\n      });\n\n      if (typeof StreetChosen !== 'undefined') {\n        Title = React.createElement(\"h2\", {\n          className: \"BuildingInfoPageTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, StreetChosen.name, \" \", StreetChosen.type.toLowerCase());\n      } else {\n        Title = React.createElement(Redirect, {\n          from: this.props.match.url,\n          to: \"/404\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.jsonFull) {\n        Houses = this.state.jsonResult.map(function (el, ind) {\n          return React.createElement(\"p\", {\n            key: el.id + ind,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, el.typeShort, \". \\u2116\", el.name, \", \\u0438\\u043D\\u0434.:\", el.zip);\n        });\n      }\n\n      var mapState = {\n        center: [56.33, 44.01],\n        zoom: 16,\n        controls: ['zoomControl', 'fullscreenControl']\n      };\n      var line = {\n        start: [55.76, 37.64],\n        end: [55.76, 37.64]\n      };\n\n      if (this.state.maps.length < 1) {\n        var name = \"\".concat(StreetChosen.name, \" \").concat(StreetChosen.type.toLowerCase());\n        var nameReverse = \"\".concat(StreetChosen.type.toLowerCase(), \" \").concat(StreetChosen.name);\n        var query = \"\\u041D\\u0438\\u0436\\u043D\\u0438\\u0439 \\u041D\\u043E\\u0432\\u0433\\u043E\\u0440\\u043E\\u0434 \\u0421\\u043E\\u0440\\u043C\\u043E\\u0432\\u0441\\u043A\\u0438\\u0439 \\u0440\\u0430\\u0439\\u043E\\u043D \".concat(name);\n        var cor = 'https://geocode-maps.yandex.ru/1.x/?format=json&apikey=c1fbe8eb-9281-46ea-bc1d-90adb3800dc0&' + 'geocode=' + query;\n        this.getCord(cor, name, nameReverse);\n      }\n\n      if (this.state.maps.length === 1) {\n        line.start = this.remark(this.state.maps[0].GeoObject.boundedBy.Envelope.lowerCorner);\n        line.end = this.remark(this.state.maps[0].GeoObject.boundedBy.Envelope.upperCorner);\n        mapState.center = this.replace(this.state.maps);\n      } else if (this.state.maps.length >= 1) {\n        console.log('ERROR');\n        console.log(this.state.maps);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"BuildingInfoPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, Title, React.createElement(\"section\", {\n        className: \"BuildingInfoPageMap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(YMaps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Map, {\n        width: 800,\n        height: 400,\n        state: mapState,\n        modules: ['control.ZoomControl', 'control.FullscreenControl'],\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Placemark, {\n        geometry: mapState.center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })))), React.createElement(\"section\", {\n        className: \"BuildingInfoPageHouses\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, Houses));\n    }\n  }]);\n\n  return BuildingsStreet;\n}(Component);\n\nexport { BuildingsStreet as default };","map":{"version":3,"sources":["D:\\WebWork\\Projects\\Sormovo\\src\\components\\Pages\\Buildings\\BuildingsStreet.js"],"names":["React","Component","Redirect","jsonp","streets","YMaps","Map","Placemark","BuildingsStreet","state","jsonResult","street","jsonFull","position","maps","getBuildings","url","err","data","console","error","message","result","length","setState","parents","getCord","name","nameReverse","search","serchFiltStreet","serchFiltCity","serchFiltName","serchFilt","response","GeoObjectCollection","featureMember","filter","el","GeoObject","metaDataProperty","GeocoderMetaData","kind","Address","Components","replace","arr","cent","Point","pos","split","remark","streetId","props","match","Title","Houses","StreetChosen","find","id","type","toLowerCase","map","ind","typeShort","zip","mapState","center","zoom","controls","line","start","end","query","cor","boundedBy","Envelope","lowerCorner","upperCorner","log","handleClick"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport jsonp from \"jsonp\";\nimport {streets} from './Listing';\nimport './Buildings.css';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\n\nexport default class BuildingsStreet extends Component {\n\tstate = {\n\t\tjsonResult: [],\n\t\tstreet: '',\n\t\tjsonFull: false,\n\t\tposition: [],\n\t\tmaps: [],\n\t};\n\tcomponentDidMount() {\n\t\tlet streetId = this.props.match.url.split('/')[2];\n\t\tlet url = 'https://kladr-api.ru/api.php' +\n\t\t\t'&streetId=' + streetId +\n\t\t\t'&contentType=building' +\n\t\t\t'&limit=100' +\n\t\t\t'&withParent=1';\n\t\tthis.getBuildings(url);\n\n\t}\n\tgetBuildings = (url) => {\n\t\tjsonp(url, null, (err, data) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.error(err.message);\n\t\t\t} else {\n\t\t\t\tif (data.result.length >= 1) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tjsonResult: data.result,\n\t\t\t\t\t\tstreet: data.result[0].parents[2],\n\t\t\t\t\t\tjsonFull: true\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tjsonFull: false\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t};\n\tgetCord = (url, name, nameReverse) => {\n\t\tjsonp(url, null, (err, data) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.error(err.message);\n\t\t\t} else {\n\t\t\t\tlet search, serchFiltStreet, serchFiltCity, serchFiltName, serchFilt;\n\t\t\t\tsearch = data.response.GeoObjectCollection.featureMember;\n\t\t\t\tserchFiltStreet = search.filter(el => el.GeoObject.metaDataProperty.GeocoderMetaData.kind === 'street');\n\t\t\t\tserchFiltCity = serchFiltStreet.filter(el =>\n\t\t\t\t\tel.GeoObject.metaDataProperty.GeocoderMetaData.Address.Components[4].name === 'Нижний Новгород');\n\t\t\t\tif (serchFiltCity.length >= 2) {\n\t\t\t\t\tserchFiltName = serchFiltCity.filter(el =>\n\t\t\t\t\t\t(el.GeoObject.name === name || el.GeoObject.name === nameReverse));\n\t\t\t\t} else serchFiltName = serchFiltCity;\n\t\t\t\tserchFilt = serchFiltName;\n\t\t\t\tif (serchFilt.length >= 1 && serchFilt !== this.state.maps) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tmaps: serchFilt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\treplace = (arr) => {\n\t\tlet cent = arr[0].GeoObject.Point.pos.split(' ');\n\t\tlet pos = [+cent[1], +cent[0]];\n\t\treturn pos;\n\t};\n\tremark = (arr) => {\n\t\tlet cent = arr.split(' ');\n\t\tlet pos = [+cent[1], +cent[0]];\n\t\treturn pos;\n\t};\n\n\n\n\trender() {\n\t\tlet Title, Houses;\n\t\tconst StreetChosen = streets.find(el => el.id === this.props.match.url.split('/')[2]);\n\t\tif (typeof StreetChosen !== 'undefined') {\n\t\t\tTitle = <h2 className=\"BuildingInfoPageTitle\">\n\t\t\t\t{StreetChosen.name} {StreetChosen.type.toLowerCase()}\n\t\t\t\t</h2>;\n\t\t} else {\n\t\t\tTitle = <Redirect from={this.props.match.url} to=\"/404\" />;\n\t\t}\n\t\tif (this.state.jsonFull) {\n\t\t\tHouses = this.state.jsonResult.map((el, ind) => {\n\t\t\t\treturn (<p key={el.id + ind}>{el.typeShort}. №{el.name}, инд.:{el.zip}</p>)\n\t\t\t});\n\t\t}\n\n\t\tlet mapState = {\n\t\t\tcenter: [56.33, 44.01],\n\t\t\tzoom: 16,\n\t\t\tcontrols: ['zoomControl', 'fullscreenControl'],\n\t\t};\n\t\tlet line = {\n\t\t\tstart: [55.76, 37.64],\n\t\t\tend: [55.76, 37.64]\n\t\t};\n\n\t\tif (this.state.maps.length < 1) {\n\t\t\tlet name = `${StreetChosen.name} ${StreetChosen.type.toLowerCase()}`;\n\t\t\tlet nameReverse = `${StreetChosen.type.toLowerCase()} ${StreetChosen.name}`;\n\t\t\tlet query = `Нижний Новгород Сормовский район ${name}`;\n\t\t\tlet cor = 'https://geocode-maps.yandex.ru/1.x/?format=json&apikey=c1fbe8eb-9281-46ea-bc1d-90adb3800dc0&' +\n\t\t\t\t'geocode=' + query;\n\t\t\tthis.getCord(cor, name, nameReverse);\n\t\t}\n\t\tif (this.state.maps.length === 1) {\n\t\t\tline.start = this.remark(this.state.maps[0].GeoObject.boundedBy.Envelope.lowerCorner);\n\t\t\tline.end = this.remark(this.state.maps[0].GeoObject.boundedBy.Envelope.upperCorner);\n\t\t\tmapState.center=this.replace(this.state.maps);\n\t\t} else if (this.state.maps.length >= 1) {\n\t\t\tconsole.log('ERROR');\n\t\t\tconsole.log(this.state.maps);\n\t\t}\n\n\n\n\t\treturn (\n\t\t\t<div className=\"BuildingInfoPage\">\n\t\t\t\t{Title}\n\t\t\t\t<section className=\"BuildingInfoPageMap\">\n\t\t\t\t\t<YMaps><Map\n\t\t\t\t\t\twidth={800}\n\t\t\t\t\t\theight={400}\n\t\t\t\t\t\tstate={mapState}\n\t\t\t\t\t\tmodules={[\n\t\t\t\t\t\t\t'control.ZoomControl',\n\t\t\t\t\t\t\t'control.FullscreenControl']}\n\t\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Placemark geometry={mapState.center} />\n\t\t\t\t\t</Map></YMaps>\n\t\t\t\t</section>\n\t\t\t\t<section className=\"BuildingInfoPageHouses\">\n\t\t\t\t\t{Houses}\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}